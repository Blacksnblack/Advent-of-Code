var html = document.getElementsByTagName('pre')[0];
var pageInput = html.innerHTML;
var lineInp = pageInput.split('\n');
var endVariable = "a";

var variablesTemp = [];
var i = 0;
while(i < lineInp.length){
	var line = lineInp[i].split(" ");
	if (line.length == 3) {
		variablesTemp.push(line[2]);
	} else if (line.length == 4) {
		variablesTemp.push(line[1]);
		variablesTemp.push(line[3]);
	} else if (line.length == 5) {
		if(isNaN(line[0])) {
		variablesTemp.push(line[0]);
		}
		if(isNaN(line[2])) {
		variablesTemp.push(line[2]);
		}
		if(isNaN(line[4])) {
		variablesTemp.push(line[4]);
		}
	}
	
	i++;
}

//var values = [];
var variables = variablesTemp.reduce(function(a,b){
if (a.indexOf(b) <= 0 ) a.push(b);
return a;
},[]);

i = 0;
var z2;
var z1;
var z;
var a = 0;
while (i <lineInp.length){
	line = lineInp[i].split(" ");
	if (line.length == 3) {
			z = search(line[2], variables)
			z1 = parseInt(line[0]);
			var values = [];
			values[z] = parseInt(z1);
			a++;
		} else if (line.length == 4) {
		a = 0;
		do {
			if(line[1] == variables[a] && values[a] != undefined) {
				z = search(line[3], variables);
				values[z] = (not(values[a]));
			}
			a++;
		} while (a < variables.length)
		
	} else if (line.length == 5){
		z2 = search(line[4], variables)
		if (isNaN(line[0]) ) {
			z = search(line[0], variables);
		}
		if (isNaN(line[2])) {
			z1 = search(line[2], variables);
		}
		if (isNaN(line[0]) && isNaN(line[2]) ) {
			if (line[1] == "AND"){
				values[z2] = and(values[z], values[z1]);
			} else if (line[1] == "RSHIFT") {
				values[z2] = rshift(values[z], values[z1]);
			} else if (line[1] == "LSHIFT") {
				values[z2] = lshift(values[z], values[z1]);
			}
		} else if (!isNaN(line[0])){
			values[z2] = and(parseInt(line[0]), z1); 
		} else if (!isNaN(line[2]) && line[1] == "RSHIFT"){
			values[z2] = rshift(z, parseInt(line[2])); 
		} else if (!isNaN(line[2]) && line[1] == "LSHIFT"){
			values[z2] = lshift(z, parseInt(line[2])); 
	}
	
	
}
	i++;
}

var pv = search(endVariable, variables);
console.log(values[pv]);

function lshift(num1, num2){
	return num1 << num2;
}

function rshift(num1, num2){
	return num1 >> num2;
}

function and(num1, num2){
	return num1 & num2;
}

function not(num) {
	//var num =123;
	var binary = [];
	if (num >= (Math.pow(2, 16)) ){
		var binary = [0];
		num = num - (Math.pow(2, 16));
	} else { 
	var binary = [1]; 
	}
	var i = 14;
	while (i >= 0) {
		if (num >= (Math.pow(2, i))){
			binary.push(0);
			num = num -(Math.pow(2, i));
		} else {
			binary.push(1);
		}
		i = i - 1;
	}
	//console.log(binary.length);
	i = binary.length - 1;
	var a = 0;
	var answer = 0;
	while (a < binary.length){
		if (binary[a] == 1) {
			answer = answer + Math.pow(2, i)
		}
		i--;
		a++;
	}
	//console.log(answer);
	return answer;	
}

function search (name, array) {
	var i = 0;
	while (i < array.length){
			if (array[i] == name) {
				return i;
			}
		i++;
	}	
}
